#!/usr/bin/env node

const dgram = require('dgram');
const server = dgram.createSocket('udp4');
const Raddec = require('raddec');
const Chimps = require('../lib/chimps.js');

const RADDEC_PORT = process.env.RADDEC_PORT || 50001;

const FEATURE_COLLECTION = {
    type: "FeatureCollection",
    features: [{
        type: "Feature",
        id: "1",
        properties: { name: "Square One" },
        geometry: {
            type: "Polygon",
            coordinates: [[[ 0, 0 ], [ -1, 0 ], [ -1, 1 ], [ 0, 1 ], [ 0, 0 ]]]
        }
    },{
        type: "Feature",
        id: "2",
        properties: { name: "Square Two" },
        geometry: {
            type: "Polygon",
            coordinates: [[[ 0, 0 ], [ 0, 1 ], [ 1, 1 ], [ 1, 0 ], [ 0, 0 ]]]
        }
    },{
        type: "Feature",
        id: "3",
        properties: { name: "Square Three" },
        geometry: {
            type: "Polygon",
            coordinates: [[[ 0, 0 ], [ 1, 0 ], [ 1, -1 ], [ 0, -1 ], [ 0, 0 ]]]
        }
    },{
        type: "Feature",
        id: "4",
        properties: { name: "Square Four" },
        geometry: {
            type: "Polygon",
            coordinates: [[[ 0, 0 ], [ 0, -1 ], [ -1, -1 ], [ -1, 0 ], [ 0, 0 ]]]
        }
    }]
};

let chimps = new Chimps({ featureCollection: FEATURE_COLLECTION });

chimps.on('spatem', (spatem) => { console.log(spatem); });

server.on('message', function(msg) {
  let raddec;
  try { raddec = new Raddec(msg); }
  catch(error) {};

  if(raddec !== null) {
    chimps.handleRaddec(raddec);
  }
});

server.bind(50001);

console.log('chimps instance is listening for raddecs on port', RADDEC_PORT);
